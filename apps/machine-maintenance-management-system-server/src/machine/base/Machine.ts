/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Breakdown } from "../../breakdown/base/Breakdown";
import { ValidateNested, IsOptional, IsDate, IsString } from "class-validator";
import { Type } from "class-transformer";
import { Maintenance } from "../../maintenance/base/Maintenance";
import { MaintenanceSchedule } from "../../maintenanceSchedule/base/MaintenanceSchedule";

@ObjectType()
class Machine {
  @ApiProperty({
    required: false,
    type: () => [Breakdown],
  })
  @ValidateNested()
  @Type(() => Breakdown)
  @IsOptional()
  breakdowns?: Array<Breakdown>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Maintenance],
  })
  @ValidateNested()
  @Type(() => Maintenance)
  @IsOptional()
  maintenances?: Array<Maintenance>;

  @ApiProperty({
    required: false,
    type: () => [MaintenanceSchedule],
  })
  @ValidateNested()
  @Type(() => MaintenanceSchedule)
  @IsOptional()
  maintenanceSchedules?: Array<MaintenanceSchedule>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  modelNumber!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Machine as Machine };

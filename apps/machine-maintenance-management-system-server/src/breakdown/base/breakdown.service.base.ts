/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Breakdown as PrismaBreakdown,
  Machine as PrismaMachine,
} from "@prisma/client";

export class BreakdownServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BreakdownCountArgs, "select">
  ): Promise<number> {
    return this.prisma.breakdown.count(args);
  }

  async breakdowns<T extends Prisma.BreakdownFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.BreakdownFindManyArgs>
  ): Promise<PrismaBreakdown[]> {
    return this.prisma.breakdown.findMany<Prisma.BreakdownFindManyArgs>(args);
  }
  async breakdown<T extends Prisma.BreakdownFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.BreakdownFindUniqueArgs>
  ): Promise<PrismaBreakdown | null> {
    return this.prisma.breakdown.findUnique(args);
  }
  async createBreakdown<T extends Prisma.BreakdownCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BreakdownCreateArgs>
  ): Promise<PrismaBreakdown> {
    return this.prisma.breakdown.create<T>(args);
  }
  async updateBreakdown<T extends Prisma.BreakdownUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BreakdownUpdateArgs>
  ): Promise<PrismaBreakdown> {
    return this.prisma.breakdown.update<T>(args);
  }
  async deleteBreakdown<T extends Prisma.BreakdownDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.BreakdownDeleteArgs>
  ): Promise<PrismaBreakdown> {
    return this.prisma.breakdown.delete(args);
  }

  async getMachine(parentId: string): Promise<PrismaMachine | null> {
    return this.prisma.breakdown
      .findUnique({
        where: { id: parentId },
      })
      .machine();
  }
}
